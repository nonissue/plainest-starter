{"version":3,"sources":["components/Error.js","components/Footer.tsx","components/Logo.js","components/Header.js","components/Loading.js","lib/useAxios.js","components/PostsListItem.tsx","pages/About.tsx","pages/PostsList.tsx","pages/PostPage.tsx","pages/UsersList.tsx","pages/UserPage.tsx","App.js","serviceWorker.js","index.js"],"names":["StyledError","styled","motion","div","gridTransition","enter","opacity","exit","y","transition","duration","Error","error","id","useParams","initial","animate","variants","code","msg","href","defaultProps","Footer","FooterWrapper","Logo","LogoWrapper","to","Header","location","useLocation","StyledHeader","pathname","className","showImage","header","LoadingWrapper","Loading","size","color","STATES","loading","success","initialState","data","undefined","axiosReducer","state","action","type","payload","useAxios","url","options","useReducer","dispatch","config","useMemo","useEffect","cancelToken","console","log","axios","CancelToken","token","then","catch","e","isCancel","PostsListItem","title","userId","user","StyledPost","name","About","AboutWrapper","PostsList","posts","StyledPosts","map","post","key","PostPage","postData","test","test2","authorData","body","UsersList","users","StyledUsers","email","UserPage","userData","StyledUser","AppWrapper","props","theme","font","text","red","link","ContentWrapper","App","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","themes","light","background","foreground","dark","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a5764cce.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { motion } from 'framer-motion';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledError = styled(motion.div)`\n  margin-top: 2em;\n  margin-bottom: 2em;\n  @media (min-width: 768px) {\n    margin-top: 5em;\n    margin-bottom: 5em;\n  }\n\n  h3 {\n    font-family: 'Bebas Neue', 'Helvetica', sans-serif;\n  }\n  h4 {\n    font-weight: 400;\n    font-family: 'Open Sans', sans-serif;\n    opacity: 0.7;\n  }\n  a,\n  a:link,\n  a:active,\n  a:visited {\n    text-decoration: underline;\n    color: #555;\n  }\n`;\n\nconst gridTransition = {\n  enter: {\n    opacity: 1,\n    // scale: 1,\n  },\n  exit: {\n    opacity: 0,\n    y: 0,\n    // scale: 0.5,\n    transition: { duration: 0.2 },\n  },\n};\n\nexport function Error({ error }) {\n  const { id } = useParams();\n\n  return (\n    <StyledError\n      initial={false}\n      animate=\"enter\"\n      enter=\"enter\"\n      exit=\"exit\"\n      variants={gridTransition}\n    >\n      <h3>Error {error.code || id || '500'}</h3>\n\n      <p>{error.msg ? error.msg : 'An unknown problem has occurred.'}</p>\n      <p>\n        Notify <a href=\"mailto:andy@nonissue.org\">support</a>.\n      </p>\n      <h4>¯\\_(ツ)_/¯ </h4>\n    </StyledError>\n  );\n}\n\nError.defaultProps = {\n  error: {\n    code: '500',\n    msg: 'An unknown error has occurred',\n  },\n};\n\nError.propTypes = {\n  error: PropTypes.shape({\n    code: PropTypes.number,\n    msg: PropTypes.string,\n  }),\n};\n\nexport default Error;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Footer: React.FC = () => {\n  return <FooterWrapper>Copyright 2019 © yoursite</FooterWrapper>;\n};\n\nconst FooterWrapper = styled.div`\n  a {\n    text-decoration: none;\n    color: #333;\n  }\n\n  opacity: 0;\n  padding: 5px 0 5px 0;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 2em;\n  font-size: 0.7em;\n  font-family: 'Lekton', monospace;\n  text-transform: uppercase;\n  animation: fadein 1s;\n  animation-delay: 0s;\n  animation-fill-mode: forwards;\n\n  @keyframes fadein {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport default Footer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport function Logo() {\n  return (\n    <LogoWrapper>\n      <>\n        <h1>\n          <Link to=\"/\">Starter</Link>\n        </h1>\n        <h3>\n          <a href=\"https://instagram.com/yourinstagram\">yourinstagram</a>\n        </h3>\n      </>\n    </LogoWrapper>\n  );\n}\n\nconst LogoWrapper = styled.div`\n  font-display: block;\n  padding: 3vh 8px 3vh 1vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: left;\n\n  a,\n  a:link,\n  a:visited {\n    color: #032d4d;\n    text-decoration: none;\n    transition: all 0.2s ease-out;\n  }\n\n  a:hover {\n    color: hsla(205.9, 85.3%, 40%, 1);\n  }\n\n  h1 {\n    margin: 0;\n    font-size: 1.2em;\n    text-transform: uppercase;\n    font-family: 'Bebas Neue', 'Helvetica', sans-serif;\n    font-weight: 400;\n    color: #fff;\n  }\n\n  h3 {\n    margin-top: 0em;\n    margin-bottom: 0em;\n    margin-left: 0.1em;\n    font-family: 'Lekton', sans-serif;\n    font-weight: 300;\n    font-size: 0.6em;\n    text-decoration: underline;\n    text-decoration-color: hsla(205.9, 92.3%, 40%, 0.5);\n    text-underline-offset: 0.1rem;\n  }\n\n  h3::before {\n    content: '@';\n    font-family: 'Lekton', sans-serif;\n    font-weight: 500;\n    text-decoration-color: transparent;\n    text-decoration: none;\n    /* for some reason this removes the underline, which i want */\n    display: inline-block;\n    color: #9cb6c9;\n    margin-right: 0.1em;\n  }\n`;\n\nexport default Logo;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, useLocation } from 'react-router-dom';\nimport { AiOutlineLeft as Back, AiOutlineQuestionCircle as Question } from 'react-icons/ai';\n\nimport { Logo } from './Logo';\n\nexport function Header() {\n  const location = useLocation();\n  return (\n    <StyledHeader>\n      {!(location.pathname === '/') ? (\n        <div className=\"control\">\n          <Link to=\"/\">\n            <Back />\n          </Link>\n        </div>\n      ) : (\n        <div className=\"control hidden\">\n          <Back />\n        </div>\n      )}\n\n      <Logo showImage={false} />\n\n      {!(location.pathname === '/about') ? (\n        <div className=\"control\">\n          <Link to=\"/about\">\n            <Question />\n          </Link>\n        </div>\n      ) : (\n        <div className=\"control hidden\">\n          <Question />\n        </div>\n      )}\n    </StyledHeader>\n  );\n}\n\nconst StyledHeader = styled.header`\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  background: hsla(100, 0%, 100%, 0.7);\n\n  -webkit-backdrop-filter: blur(5px);\n  backdrop-filter: blur(5px);\n  animation: fadein 0.3s;\n  font-size: calc(12px + 1.5vmin);\n  border: 0px solid #ccc;\n  border-left: 0;\n  border-right: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n\n  .control {\n    text-transform: uppercase;\n    font-size: 0.7em;\n    font-family: 'Lekton', monospace, sans-serif;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: 2em;\n    margin-right: 2em;\n\n    a,\n    a:link,\n    a:visited {\n      color: #aaa;\n      opacity: 9;\n      text-decoration: none;\n      transition: color 0.2s ease-out;\n    }\n\n    a:hover {\n      opacity: 1;\n      color: #0f72bd;\n    }\n  }\n  .hidden {\n    visibility: hidden;\n  }\n\n  @media only screen and (max-width: 700px) {\n    .control a {\n      font-size: 1.5em;\n    }\n  }\n`;\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\nimport BounceLoader from 'react-spinners/BounceLoader';\n\nconst LoadingWrapper = styled.div`\n  position: absolute;\n  left: 50%;\n  margin-left: -15px;\n  top: 50%;\n  margin-top: -15px;\n  width: 30px;\n  font-family: 'Lekton', 'Courier', monospace;\n  font-weight: 400;\n  font-size: 2em;\n  animation: fadein 1s;\n  font-weight: 400;\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n\n  @keyframes fadein {\n    0% {\n      opacity: 0.2;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nexport function Loading() {\n  return (\n    <LoadingWrapper>\n      {/* <Oval /> */}\n      <BounceLoader size={50} color=\"#054B81\" />\n    </LoadingWrapper>\n  );\n}\n\nexport default Loading;\n","// from\n// https://github.com/strt/www/blob/6cb0dee92fc39ed71433a92996156e34639b8b49/src/lib/useAxios.js\n// actually I think this is the original:\n// https://github.com/ABWalters/react-api-hooks/blob/master/src/useAPI.js\n// this is similar:\n// https://github.com/use-hooks/react-hooks-axios/blob/master/src/index.js\n/* \nNOTE:\nCould use \n\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nto fix the eslint hook warning, as if we pass args in an array literal,\nhook is called infiitely. Just don't want to add a dependency when we can\nfudge it by disabling eslint for that line. Though this may cause other problems.\n\n */\n\nimport { useReducer, useEffect, useRef, useMemo } from 'react';\n\nimport axios from 'axios';\n\nconst STATES = {\n  loading: 0,\n  success: 1,\n  error: 2,\n};\n\nconst initialState = { loading: true, error: null, data: undefined };\n\nfunction axiosReducer(state, action) {\n  switch (action.type) {\n    case STATES.loading:\n      return { ...state, loading: true, error: null };\n    case STATES.error:\n      return { ...state, loading: false, error: action.payload };\n    case STATES.success:\n      return { ...state, loading: false, error: null, data: action.payload };\n    default:\n      throw new Error();\n  }\n}\n\n/*\nuseAxios \n- ARGS param currently only accepts url\n*/\n\nexport const useMemoList = (list, compareFn = (a, b) => a === b) => {\n  const listRef = useRef(list);\n  const listChanged =\n    list.length !== listRef.current.length ||\n    list.some((arg, index) => !compareFn(arg, listRef.current[index]));\n  if (listChanged) {\n    // we can't do this in effects, which run too late.\n    listRef.current = list;\n  }\n  return listRef.current;\n};\n\n// Could maybe simplify parameter signature now that I think I have the deps handled.\n// (spreading the url object seems a little redundant)\n// I think it was the shape of the parameters (not consistent between objects/strings/arrays)\n// that was causing me so many problems.\n\n// eslint-disable-next-line import/prefer-default-export\nexport function useAxios(url, options = {}) {\n  const [state, dispatch] = useReducer(axiosReducer, initialState);\n\n  // Memoing the passed params seems to resolve the useEffect dependency issues\n  const config = useMemo(() => ({ ...url, ...options }), [url, options]);\n\n  useEffect(() => {\n    let cancelToken = null;\n    // eslint-disable-next-line no-console\n    console.log('effect called');\n    /* \n    Only fetch when the url !== null\n    (the url param is set to null when we are waiting on\n    data from another instance of the hook) \n     */\n\n    if (config.url) {\n      axios(config.url, {\n        ...config.options,\n        cancelToken: new axios.CancelToken(token => {\n          cancelToken = token;\n        }),\n      })\n        .then(({ data }) => {\n          cancelToken = null;\n          dispatch({ type: STATES.success, payload: data });\n        })\n        .catch(e => {\n          if (axios.isCancel(e)) return;\n          dispatch({ type: STATES.error });\n        });\n    }\n\n    return () => {\n      if (cancelToken) {\n        cancelToken();\n      }\n    };\n  }, [config.url, config.options]);\n\n  return state;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { useAxios } from '../lib/useAxios';\n\n/*\nTests:\n* check that error renders error comp\n* check that loading renders loading comp\n\nTODO: \n* This fetches data, should all data fetching components be separated?\n*/\ntype PostProps = {\n  id: number;\n  title: string;\n  userId: number;\n  body: string;\n};\n\nexport const PostsListItem: React.FC<PostProps> = ({ id, title, userId }: PostProps) => {\n  const { data: user, loading, error } = useAxios({\n    url: `/.netlify/functions/users-fetch-one/${userId}`,\n  });\n\n  if (error) {\n    return <h3>Error loading post!</h3>;\n  }\n  if (loading) {\n    return <></>;\n  }\n  return (\n    <StyledPost>\n      <h2>\n        <Link to={`/posts/${id}`}>{title}</Link>\n      </h2>\n      <h4>\n        — <Link to={`/users/${user.id}`}>{user.name}</Link>\n      </h4>\n    </StyledPost>\n  );\n};\n\nconst StyledPost = styled.div`\n  text-align: left;\n  line-height: 1.6em;\n  margin-bottom: 1.25em;\n\n  h2 {\n    font-weight: 600;\n    font-size: 1.4em;\n    max-width: 85%;\n    text-transform: capitalize;\n    line-height: 1.2em;\n    margin-bottom: 0;\n    letter-spacing: -0.03em;\n  }\n  h4 {\n    font-weight: 300;\n    text-transform: uppercase;\n    padding: 0;\n    font-size: 0.85em;\n    margin: 0;\n    color: #555;\n\n    a {\n      background: transparent;\n      font-family: 'Lekton';\n      font-weight: 400;\n      /* border-radius: 0.25em;\n      padding: 0.1em 0.2em; */\n    }\n  }\n  p {\n    font-size: 0.95em;\n  }\n`;\n\nexport default PostsListItem;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const About: React.FC = () => {\n  return (\n    <AboutWrapper>\n      <div className=\"about\">\n        <h3>About</h3>\n        <p>\n          &quot;Boring photos of buildings&quot; <i>aka</i> &quot;A kuest for klout™️&quot; cooked\n          up sporadically by\n          <a href=\"https://www.instagram.com/christiandy/\">@christiandy</a>\n          <a href=\"https://www.instagram.com/christiandy/\">@nonissue</a>\n        </p>\n      </div>\n    </AboutWrapper>\n  );\n};\n\nconst AboutWrapper = styled.div`\n  color: #032d4d;\n  width: 50vw;\n  margin: 0px auto;\n  padding-top: 5vw;\n  max-width: 500px;\n  font-family: 'Work Sans', sans-serif;\n  line-height: 1.5em;\n  text-align: center;\n  font-family: 'Lekton', monospace;\n\n  h3 {\n    font-family: 'Bebas Neue', 'Helvetica', sans-serif;\n    font-weight: 400;\n    letter-spacing: 0.1em;\n    text-align: center;\n  }\n\n  b {\n    font-style: normal;\n    font-family: 'Lekton', monospace;\n    text-transform: uppercase;\n    font-weight: 600;\n  }\n\n  a:link,\n  a:visited {\n    color: inherit;\n    text-decoration: underline;\n    text-decoration-color: hsla(205.9, 92.3%, 40%, 0.5);\n    text-underline-offset: 0.1rem;\n    font-weight: 700;\n    transition: all 0.1s ease-out;\n  }\n\n  a:hover {\n    color: #fa6400;\n    color: hsla(205.9, 85.3%, 40%, 1);\n    text-decoration-color: transparent;\n  }\n`;\n\nexport default About;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useAxios } from '../lib/useAxios';\nimport { Loading, PostsListItem } from '../components';\n\ntype Post = {\n  title: string;\n  id: number;\n  body: string;\n  userId: number;\n};\n\nexport const PostsList: React.FC = () => {\n  const url = {\n    url: '/.netlify/functions/posts-fetch-all-mock',\n  };\n\n  const { data: posts, loading, error } = useAxios(url);\n\n  if (error) {\n    return <div>Error!</div>;\n  }\n\n  return (\n    <StyledPosts>\n      {!loading ? (\n        /* eslint-disable-next-line react/jsx-props-no-spreading */\n        posts.map((post: Post) => <PostsListItem key={post.id} {...post} />)\n      ) : (\n        <Loading />\n      )}\n    </StyledPosts>\n  );\n};\n\nconst StyledPosts = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  a {\n    background: orange;\n  }\n\n  div:first-child {\n    margin-bottom: 4em;\n    h2 {\n      font-size: 2.5em;\n      font-weight: 800;\n      line-height: 1.2em;\n      text-align: center;\n      letter-spacing: -0.02em;\n      max-width: 100%;\n    }\n    h4 {\n      text-align: center;\n      margin-left: 0;\n      margin-top: 1em;\n      font-size: 1.2em;\n    }\n  }\n`;\n\nexport default PostsList;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link, useParams } from 'react-router-dom';\nimport { useAxios } from '../lib/useAxios';\n\ntype PostState = {\n  title: string;\n  id: number;\n  body: string;\n  userId: number;\n};\n\ntype AuthorState = {\n  name: string;\n};\n\n/* \nIssue: \nWe don't know the userId until we've fetched the post successfully\nOnce we get the userId, we can fetch the user data. So we have to\nawait the post data? \nSo we have to make useAxios an async hook right?\n\nIt is nice that the useAxios hook returns a structured object of state\n(data, loading, error). But then do we really need that since we are only \nrendering one discrete component?\n\n*/\n\n/*\nNote:\n\nRemoved useAxios / useAxiosAsync altogether.\nFunction below replaces them\nThat way,  we don't need two different components both fetching\n\nWould be nice to use reduecers for each slice of state\n*/\n\nexport const PostPage: React.FC = () => {\n  // eslint-disable-next-line prefer-const\n  let { id } = useParams();\n\n  const { data: postData } = useAxios(\n    {\n      url: `/.netlify/functions/posts-fetch-one/${id}`,\n    },\n    { test: 'test', test2: 'test3' },\n  );\n\n  const { data: authorData } = useAxios({\n    url: postData ? `/.netlify/functions/users-fetch-one/${postData.userId}` : null,\n  });\n\n  return (\n    <StyledPost>\n      {postData ? (\n        <>\n          <h1>\n            <Link to={`/posts/${postData.id}`}>{postData.title}</Link>\n          </h1>\n          <h4>— by {authorData ? authorData.name : 'Loading'}</h4>\n          {/* <AuthorInfo userId={post.userId} /> */}\n          <p>{postData.body}</p>\n        </>\n      ) : (\n        <>Loading...</>\n      )}\n    </StyledPost>\n  );\n};\n\nconst StyledPost = styled.div`\n  text-align: left;\n  line-height: 1.6em;\n  margin-bottom: 3em;\n  max-width: 600px;\n  margin: 0 auto;\n\n  h1 {\n    font-weight: 700;\n    text-transform: capitalize;\n    line-height: 1.2em;\n    margin-bottom: 0.2em;\n    letter-spacing: -0.03em;\n    text-align: left;\n  }\n  h4 {\n    font-weight: 300;\n    text-transform: uppercase;\n    padding: 0;\n    margin: 0;\n    color: #555;\n    margin-left: 0.5em;\n    text-align: left;\n  }\n  p {\n    font-size: 0.95em;\n    line-height: 1.6em;\n\n    :first-letter {\n      text-transform: capitalize;\n    }\n    :after {\n      content: '.';\n    }\n  }\n`;\n\nexport default PostPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useAxios } from '../lib/useAxios';\nimport { Loading } from '../components';\n\ntype Post = {\n  title: string;\n  id: number;\n  body: string;\n  userId: number;\n};\n\nexport const UsersList: React.FC = () => {\n  const url = {\n    url: '/.netlify/functions/users-fetch-all',\n  };\n\n  const { data: users, loading, error } = useAxios(url);\n\n  if (error) {\n    return <div>Error!</div>;\n  }\n\n  return (\n    <StyledUsers>\n      {!loading ? (\n        users.map((user: any) => (\n          <div key={user.id}>\n            <p>\n              <b>{user.name}</b>\n            </p>\n            <p>{user.email}</p>\n          </div>\n        ))\n      ) : (\n        <Loading />\n      )}\n    </StyledUsers>\n  );\n};\n\nconst StyledUsers = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  a {\n    background: orange;\n  }\n\n  /* div:first-child {\n    margin-bottom: 4em;\n    h2 {\n      font-size: 2.5em;\n      font-weight: 800;\n      line-height: 1.2em;\n      text-align: center;\n      letter-spacing: -0.02em;\n      max-width: 100%;\n    }\n    h4 {\n      text-align: center;\n      margin-left: 0;\n      margin-top: 1em;\n      font-size: 1.2em;\n    }\n  } */\n`;\n\nexport default UsersList;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { useAxios } from '../lib/useAxios';\n\ntype PostState = {\n  title: string;\n  id: number;\n  body: string;\n  userId: number;\n};\n\ntype AuthorState = {\n  name: string;\n};\n\nexport const UserPage: React.FC = () => {\n  // eslint-disable-next-line prefer-const\n  let { id } = useParams();\n\n  const { data: userData } = useAxios({\n    url: `/.netlify/functions/users-fetch-one/${id}`,\n  });\n\n  return (\n    <StyledUser>\n      {userData ? (\n        <div>\n          <p>\n            <b>{userData.name}</b>\n          </p>\n          <p>{userData.email}</p>\n        </div>\n      ) : (\n        <>Loading...</>\n      )}\n    </StyledUser>\n  );\n};\n\nconst StyledUser = styled.div`\n  text-align: left;\n  line-height: 1.6em;\n  margin-bottom: 3em;\n  max-width: 600px;\n  margin: 0 auto;\n\n  h1 {\n    font-weight: 700;\n    text-transform: capitalize;\n    line-height: 1.2em;\n    margin-bottom: 0.2em;\n    letter-spacing: -0.03em;\n    text-align: left;\n  }\n  h4 {\n    font-weight: 300;\n    text-transform: uppercase;\n    padding: 0;\n    margin: 0;\n    color: #555;\n    margin-left: 0.5em;\n    text-align: left;\n  }\n  p {\n    font-size: 0.95em;\n    line-height: 1.6em;\n\n    :first-letter {\n      text-transform: capitalize;\n    }\n    :after {\n      content: '.';\n    }\n  }\n`;\n\nexport default UserPage;\n","import { Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport './App.css';\nimport { Error as ErrorPage, Footer, Header } from './components';\nimport { About, PostsList, PostPage, UsersList, UserPage } from './pages';\n\n/*\n\nTheme stuff:\nbody text: #032d4d;\nlink hover: hsla(205.9, 85.3%, 40%, 1);\nlogo color: #054B81;\ntext-underline: hsla(205.9, 92.3%, 40%, 0.5);\ndarker-blue: color: #021728;\n\nfont-families?\nbox-shadows?\n\ndarkmode lightmode?\n\n*/\n\n/*\nThe same Grid component is serverd for both the root route and for the /posts/:id route\nThis is so that, when a post is clicked, we can render the individual post modal above \nthe rest of the posts AND update the url at the same time.\nRouting to the individual post is easy but we would wouldn't be able to have modal appear\nABOVE the existing post grid.\n\nIssues: How we do serve 404 whne a visit to /post/:id isn't a valid post?\n\n*/\n\nfunction App() {\n  return (\n    <AppWrapper>\n      <Header />\n      <ContentWrapper>\n        <Switch>\n          <Route exact path=\"/\">\n            <PostsList />\n          </Route>\n          <Route path=\"/posts/:id\" component={PostPage} />\n          <Route exact path=\"/users\" component={UsersList} />\n          <Route path=\"/users/:id\" component={UserPage} />\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route>\n            <ErrorPage error={{ code: 404, msg: 'Page not found!' }} />\n          </Route>\n        </Switch>\n      </ContentWrapper>\n      <Footer />\n    </AppWrapper>\n  );\n}\n\nconst AppWrapper = styled.div`\n  text-align: center;\n  font-family: ${props => props.theme.font};\n  color: ${props => props.theme.text};\n  /* background: ${props => props.theme.red}; */\n\n  a {\n    /* ${props => props.theme.link} */\n    color: #333;\n    text-decoration: none;\n  }\n`;\n\nconst ContentWrapper = styled.div`\n  a {\n    ${props => props.theme.link}\n  }\n`;\n\nexport default App;\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import history from './history'\n\n// body text: #032d4d;\n// link hover: hsla(205.9, 85.3%, 40%, 1);\n// logo color: #054B81;\n// text-underline: hsla(205.9, 92.3%, 40%, 0.5);\n// darker-blue: color: #021728;\n\nconst link = `\n  color: 'hsla(205.9, 85.3%, 40%, 1)';\n  text-decoration: none;\n  \n`;\n\nconst themes = {\n  light: {\n    background: '#ffffff',\n    foreground: '#191b24',\n    text: '#191b24',\n    font: `'Work Sans', 'Helvetica Neue', 'Helvetica', Arial, sans-serif`,\n    link,\n  },\n  dark: {\n    background: '#333333',\n  },\n};\n\nReactDOM.render(\n  <BrowserRouter>\n    <ThemeProvider theme={themes.light}>\n      <App />\n    </ThemeProvider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}